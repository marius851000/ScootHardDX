/*
Copyright 2020-2021 Sanya K. Waffles

Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:

1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.

2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.

3. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/

Class SHDX_HighGuardBullet : FastProjectile
{
	Default
	{
		Speed 55;
		Radius 8;
		Height 8;
		DamageFunction Random[HighGuard](3,7);
		DamageType "Bullet";
		Scale 0.12;
		MissileType "SHDX_BulletTrail";
		MissileHeight 8;
		RenderStyle "Translucent";
		Alpha 0.667;
		
		+CANNOTPUSH
		+NODAMAGETHRUST
		+SPAWNSOUNDSOURCE
		//+ALLOWTHRUFLAGS
		//+THRUSPECIES
		//+MTHRUSPECIES
		+BloodSplatter
	}
	States
	{
		Spawn:
			BULL A 4 Bright;
			Loop;
		Death:
			PUFF ABCD 4 Bright;
			Stop;
	}
}

Class SHDX_HighGuard : SHDX_Enemy
{
	Default
	{
		//$Category "Monsters"
		//$Sprite HIGHA1
		//$Title "High Guard"
		
		Health 70;
		Radius 20;
		Height 56;
		Mass 100;
		Speed 8;
		PainChance 200;
		SeeSound "hguard1/sight";
		PainSound "hguard1/pain";
		DeathSound "hguard1/death";
		ActiveSound "hguard1/active";
		Obituary "$SHDX_OB_HIGHGUARD";
		Tag "$SHDX_TAG_HIGHGUARD";
		Species "Pony";
	}
	
	void A_DropItemsHighGuard()
	{
		if (target && target.CountInv("SHDX_BitCoin") < 50)
			A_SHDX_DropItem("SHDX_SilverBitCoin", false);
		
		if (target && target.CountInv("SHDX_SubmachineGun") < 1)
			A_SHDX_DropItem("SHDX_SubmachineGun");
	}
	
	void A_HighGuardFire()
	{
		A_StartSound("hguard/attack", CHAN_WEAPON);
		A_SpawnProjectile("SHDX_HighGuardBullet", 32);
	}
	
	States
	{		
		Spawn:
			HIGH A 10 A_Look;
			Loop;
		See:
			HIGH BCDEBCDE 4 A_Chase;
			Loop;
		Missile:
			HIGH F 0 A_StopSound(CHAN_BODY);
			HIGH F 2 A_FaceTarget;
			HIGH G 2 Bright A_HighGuardFire;
			HIGH H 2;
			HIGH F 2 A_FaceTarget;
			HIGH G 2 Bright A_HighGuardFire;
			HIGH H 2;
			HIGH F 2 A_FaceTarget;
			HIGH G 2 Bright A_HighGuardFire;
			HIGH H 2;
			HIGH F 2 A_FaceTarget;
			HIGH G 2 Bright A_HighGuardFire;
			HIGH H 2;
			Goto See;
		Pain:
			HIGH K 3;
			HIGH K 3 A_Pain;
			Goto See;
		Pain.Lightning:
			HIGH K 0 A_SetElectrocutionTranslation;
			HIGH K 3;
			HIGH K 3 A_Pain;
			HIGH K 0 A_ResetTranslation;
			Goto See;
		Death:
			HIGH L 0 A_ResetTranslation;
			HIGH L 5 A_NewScream;
			HIGH M 5
			{
				A_NoBlocking();
				A_DropItemsHighGuard();
				A_SHDX_GivePlayerOneLiner(SHDX_ONELINER_NORMAL_CHANCE);
			}
			HIGH N 5;
			HIGH O -1 A_SetCorpseShootable;
			Stop;
		Death.Lightning:
			HIGH L 0 A_ResetTranslation;
			HIGH L 5 A_NewScream;
			HIGH M 5
			{
				A_NoBlocking();
				A_DropItemsHighGuard();
				A_SHDX_GivePlayerOneLiner(SHDX_ONELINER_NORMAL_CHANCE, oltype:OLTYPE_LIGHTNING);
			}
			HIGH N 5;
			HIGH O -1 A_SetCorpseShootable;
			Stop;
		Ice:
			HIGH K 0 A_SHDX_GivePlayerOneLiner(SHDX_ONELINER_NORMAL_CHANCE, oltype:OLTYPE_FROZEN);
			HIGH K 315 A_SHDX_FreezeDeath;
			HIGH K 105 A_SHDX_IceShards;
			Wait;
		Death.Explosive:
			GIBX A 0 A_ResetTranslation;
			GIBX A 3
			{
				A_SHDX_ExtremeScreamAndUnblock();
				A_DropItemsHighGuard();
				A_SpawnGibsFx();
			}
			Goto Super::Death.Explosive;
		Death.Weather:
			GIBX A 0 A_ResetTranslation;
			GIBX A 3
			{
				A_SHDX_ExtremeScreamAndUnblock();
				A_DropItemsHighGuard();
				A_SpawnGibsFx();
			}
			Goto Super::Death.Weather;
		Death.Extreme:
			GIBX A 0 A_ResetTranslation;
			GIBX A 3
			{
				A_SHDX_ExtremeScreamAndUnblock();
				A_DropItemsHighGuard();
				A_SpawnGibsFx();
			}
			Goto Super::Death.Extreme;
		Crush:
			GIBX D 0 A_SHDX_SquishSound;
			GIBX D 1;
			GIBX D -1;
			Stop;
	}
}

Class SHDX_RocketGuardMissile : SHDX_Missile
{
	Default
	{
		Radius 11;
		Height 8;
		Speed 30;
		Damage 4;
		Projectile;
		+RANDOMIZE
		DamageType "Explosive";
		SeeSound "weapons/rocketf";
		DeathSound "weapons/rocketx";
		Obituary "$SHDX_OB_MISSILE";
		
		+ROCKETTRAIL
	}
	
	States
	{
		Spawn:
			MISL A 1 Bright;
			Loop;
		
		Death:
			EXPL A 0 Bright
			{
				A_Explode(14, 40, damagetype:'Explosive');
				// SHDX_Utilities.DoExplosion(self, 12, 32, 32, DamageType:'Explosive');
			}
			EXPL A 3 Bright A_Quake(2, 8, 0, 1096);
			EXPL BCDEFGHI 3 Bright;
			Stop;
	}
}
